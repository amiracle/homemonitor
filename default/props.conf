[syslog]
TRANSFORMS-changesourcetype = asus, dd-wrt, fios, link sys, mikro, netgear, openwrt, pfsense, quantum, sophos, skyhub, tomato, yourdevice

[yourdevice]
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[asus]
# Based on Asus RT-N66U router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = (?i) .*?: (?P<action>\w+)(?= )
EVAL-direction = if(match(OUT,"eth*"), "out", "in")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[dd-wrt]
pulldown_type = 1
EXTRACT-action = (?i) .*?: (?P<action>\w+)(?= )
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EVAL-direction = if(match(OUT,"eth*"), "out", "in")
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[fios]
pulldown_type = 1
EXTRACT-direction = ^(?:[^ \n]* ){11}(?P<direction>\w+)
EXTRACT-protocol = ^[^\(\n]*\(\s+:\s+(?P<protocol>\w+)
EXTRACT-protocol = ^[^\(\n]*\((?P<protocol>\w+)
EXTRACT-action = ^(?:[^ \n]* ){12}(?P<action>\w+)
EXTRACT-state = ^[^\]\n]*\]\s+(?P<state>\w+\s+\w+)
EXTRACT-src_ip = ^[^\(\n]*\(\s+:\s+\w+\s+(?P<src_ip>\d+\.\d+\.\d+\.\d+)
EXTRACT-src_port = ^(?:[^:\n]*:){7}(?P<src_port>\d+)
EXTRACT-nat_ip = ^[^>\n]*>(?P<nat_ip>\d+\.\d+\.\d+\.\d+)
EXTRACT-dest_ip = ^(?:[^\[\n]*\[){2}(?P<dest_ip>\d+\.\d+\.\d+\.\d+)
EXTRACT-dest_port = ^(?:[^:\n]*:){9}(?P<dest_port>\d+)
EXTRACT-interface = ^[^/\n]*/\w+_\w+_\d+\s+(?P<interface>\w+)
EXTRACT-reason = ^(?:[^:\n]*:){5}\s+\w+\s+(?P<reason>[^ ]+)
EXTRACT-src_ip = ^[^\(\n]*\(\w+\s+(?P<src_ip>\d+\.\d+\.\d+\.\d+)
EXTRACT-src_port = ^(?:[^\.\n]*\.){4}\d+:(?P<src_port>\d+)
EXTRACT-dest_ip = ^[^>\n]*>(?P<dest_ip>\d+\.\d+\.\d+\.\d+)
EXTRACT-dest_port = ^(?:[^\.\n]*\.){4}\d+:(?P<dest_port>\d+)
LOOKUP-fios = action_lookup action OUTPUTNEW action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[linksys]
DATETIME_CONFIG = CURRENT
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
category = Custom
pulldown_type = true
EXTRACT-src_ip,dest_ip,linksys_src_port,action = ^(?P<src_ip>[^ ]+) to (?P<dest_ip>[^:]+):(?P<linksys_src_port>[a-z]+) is (?P<action>.+)
LOOKUP-linksys_src_port_lookup = linksys_src_port_lookup linksys_src_port OUTPUTNEW src_port
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[mikro]
EXTRACT-hostname = ^(?:[^ \n]* ){7}(?P<hostname>\w+)
EXTRACT-protocol = ^(?:[^,\n]*,){2}\s+\w+\s+(?P<protocol>\w+)
EXTRACT-src_ip,src_port = ^(?:[^,\n]*,){4}\s+(?P<src_ip>[^:]+)[^:\n]*:(?P<src_port>\d+)
EXTRACT-dest_ip,dest_port = ^[^>\n]*>(?P<dest_ip>[^:]+)[^:\n]*:(?P<dest_port>\d+)
EXTRACT-direction = ^(?:[^ \n]* ){9}(?P<direction>\w+)
EXTRACT-nat_ip,nat_port = ^(?:[^>\n]*>){2}(?P<nat_ip>[^:]+)[^:\n]*:(?P<nat_port>[^\)]+)
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[netgear]
# Based on Netgear FV318N router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = (?i) LOG_PACKET\[(?P<action>[^\]]+)
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[openwrt]
# Based on Asus RT-N66U router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = ^[^\]\n]*\]\s+(?P<action>\w+)
EVAL-direction = if(match(OUT,"eth*"), "out", "in")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[pfsense]
REPORT-common-pf = REPORT-common-pf
REPORT-ipv4-tcp = REPORT-ipv4-tcp
REPORT-ipv4-udp = REPORT-ipv4-udp
REPORT-ipv6-udp = REPORT-ipv6-udp
REPORT-ipv6-tcp = REPORT-ipv6-tcp
REPORT-icmp = REPORT-icmp
REPORT-carp = REPORT-carp
REPORT-ipv6-pf = REPORT-ipv6-pf
REPORT-ipv4-pf = REPORT-ipv4-pf
EXTRACT-nat_ip,nat_mac,nat_hostname = ^(?:[^:\n]*:){5}\s+\w+\s+\w+\s+(?P<nat_ip>[^ ]+) to (?P<nat_mac>[^ ]+)\s+\((?P<nat_hostname>[^\)]+)
EXTRACT-ip_spec4 = ^(?:[^,\n]*,){8}4,(?P<ip_spec4>.+)
EXTRACT-ip_spec6 = ^(?:[^,\n]*,){8}6,(?P<ip_spec6>.+)
EXTRACT-rule_number = ^(?:[^ \n]* ){10}(?P<rule_number>\d+)
EXTRACT-application = ^(?:[^ \n]* ){9}(?P<application>\w+)
EXTRACT-openvpn_event = ^[^\]\n]*\]:\s+(?P<openvpn_event>[^ ]+)
EXTRACT-openvpn_session_id,src_ip_openvpn,src_port_openvpn,auth_user = ^[^\[\n]*\[(?P<openvpn_session_id>\d+)\]:\s+(?P<src_ip_openvpn>[^:]+):(?P<src_port_openvpn>[^ ]+)[^'\n]*'(?P<auth_user>\w+)
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[quantum]
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = ^[^\]\n]*\]:\s+(?P<action>\w+)
EVAL-direction = if(match(OUT,"eth*"), "out", "in")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host


[sophos]
FIELDALIAS-srcip = srcip as src_ip
FIELDALIAS-srcport = srcport as src_port
FIELDALIAS-dstip = dstip as dest_ip
FIELDALIAS-dstport = dstport as dest_port
FIELDALIAS-dstmac = dstmac as dest_mac
FIELDALIAS-proto = proto as protocol
FIELDALIAS-fwrule = fwrule as firewall_rule
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[skyhub]
# Based on Skyhub SR101 router syslog output.
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
EXTRACT-action = (?i) kernel: (?P<action>[^\-]+)
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_host

[tomato]
#Based on the ASUS model provided in the default props.conf
FIELDALIAS-dst = DST as dest_ip
FIELDALIAS-dpt = DPT as dest_port
FIELDALIAS-proto = PROTO as protocol
FIELDALIAS-SPT = SPT as src_port
FIELDALIAS-SRC = SRC as src_ip
#EXTRACT-action = (?i) .*?: (?P\w+)(?= )
EVAL-direction = if(match(IN,"vlan2"), "in", "out")
pulldown_type = 1
LOOKUP-action_lookup = action_lookup action OUTPUT action2
LOOKUP-rdns = dnsLookup ip AS dest_ip OUTPUTNEW host as rdns_hos

[bandwidth_test]

[neubot]
EXTRACT-neubot_host,neubot_test,neubot_results = ^(?:[^ \n]* ){7}(?P<neubot_host>[^ ]+)[^:\n]*:\s+(?P<neubot_test>\w+):\s+(?P<neubot_results>.+)
